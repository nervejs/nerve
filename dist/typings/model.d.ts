import { EventEmitter } from './event';
export declare class Model extends EventEmitter {
    protected _attr: any;
    protected defaults: any;
    protected events: any;
    protected errors: any[];
    protected isFetchedState: boolean;
    protected isRemovedState: boolean;
    protected fetchXHR: any;
    id: any;
    cid: number;
    protected url: string;
    protected urlSave: string;
    protected urlCreate: string;
    protected urlRemove: string;
    protected validation: any[];
    protected uniqueKey: string;
    protected static counter: number;
    constructor(attr: any, options?: any);
    destroy(): this;
    getSingle(key: string): any;
    setSingle(key: string, value: any, options?: any): boolean;
    get(key: string | string[]): any;
    set(key: any, value?: any, options?: any): this;
    validate(options: any): boolean;
    toJSON(): any;
    fetch(): Promise<any>;
    save(): Promise<any>;
    create(): Promise<any>;
    remove(): Promise<any>;
    abort(): this;
    fetched(): Promise<any>;
    setResponse(response: any): this;
    isFetched(): boolean;
    isRemoved(): boolean;
    isRemoveReady(): boolean;
    isPending(): boolean;
    protected delegateEvents(): this;
    protected adapter(srcAttr: any): any;
    protected getUrl(): string;
    protected getFetchParams(): any;
    protected getSaveParams(): any;
    protected getCreateParams(): any;
    protected getRemoveParams(): any;
    protected getFetchSettings(): any;
    protected getSaveSettings(): any;
    protected getCreateSettings(): any;
    protected getRemoveSettings(): any;
}
